// 🚀 NIHONGO-AI 認証・課金システム Prismaスキーマ
// 作成日: 2025-07-11
// 説明: NextAuth.js v5 + Stripe統合対応のデータベーススキーマ

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// ==========================================
// NextAuth.js v5 標準テーブル
// ==========================================

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  // ==========================================
  // NextAuth.js標準フィールド（認証時に自動収集）
  // ==========================================
  id                   String   @id @default(cuid())              // 自動生成
  name                 String?                                      // 【Auth】OAuth・手動サインアップ時
  email                String   @unique                            // 【Auth】OAuth・手動サインアップ時
  emailVerified        DateTime? @map("email_verified")            // 【Auth】メール認証時
  image                String?                                      // 【Auth】OAuth時のプロフィール画像
  password             String?                                      // 【Auth】手動サインアップ時（ハッシュ化）
  createdAt            DateTime @default(now()) @map("created_at") // 自動生成
  updatedAt            DateTime @updatedAt @map("updated_at")      // 自動更新

  // ==========================================
  // 基本プロフィール情報（Dashboard収集）
  // ==========================================
  age                  Int?                                        // 【Dashboard】任意入力
  gender               Gender?                                     // 【Dashboard】任意選択
  organization         String?                                     // 【Dashboard】任意入力（会社・学校名）
  occupation           String?                                     // 【Dashboard】任意入力（職業）
  location             String?                                     // 【Dashboard】手動選択 + IP自動検出補助
  timezone             String?                                     // 【System】ブラウザ自動検出
  
  // ==========================================
  // 言語・教育情報（Dashboard収集 - 優先度高）
  // ==========================================
  japanese_language_level Int?                                    // 【Dashboard】必須選択 1-6 (N5〜ネイティブ)
  is_educator            Boolean?                                 // 【Dashboard】必須Yes/No
  educate_experience     Int?                                     // 【Dashboard】教育者の場合の年数
  native_language        String?                                  // 【Dashboard】選択式
  available_languages    String[]                                 // 【Dashboard】複数選択
  
  // ==========================================
  // 学習・利用目的（Dashboard収集 - 優先度高）
  // ==========================================
  learningGoals        String[]                                   // 【Dashboard】複数選択（学習目標）
  preferredLanguage    String   @default("ja")                   // 【System】初期値"ja"、設定で変更可
  
  // ==========================================
  // マーケティング属性（Dashboard収集 - 優先度高）
  // ==========================================
  role                   String?                                  // 【Dashboard】必須選択：teacher/learner/school/engineer/researcher/other
  experience             String?                                  // 【Dashboard】選択：beginner/1-3years/3-10years/10years+
  region                 String?                                  // 【Dashboard】手動確認 + IP自動検出
  
  // ==========================================
  // 興味・ニーズ（Dashboard収集 - 優先度高）
  // ==========================================
  interests              String[]                                 // 【Dashboard】複数選択：ai_article/material_creation/translation/community
  pain_points            String[]                                 // 【Dashboard】任意複数選択（現在の課題）
  goals                  String[]                                 // 【Dashboard】複数選択（達成したい目標）
  
  // ==========================================
  // 行動データ（System自動収集）
  // ==========================================
  device_type            String?                                  // 【System】User-Agent自動検出
  access_pattern         String?                                  // 【System】ログイン頻度から自動算出
  
  // ==========================================
  // 商用分析（Dashboard収集 - 優先度高）
  // ==========================================
  budget_range           String?                                  // 【Dashboard】必須選択：free_only/up_to_3000/up_to_10000/over_10000
  decision_maker         Boolean?                                 // 【Dashboard】Yes/No（購入決定権）
  
  // ==========================================
  // プロフィール完成度管理（System自動計算）
  // ==========================================
  profile_completion     Int                      @default(20)  // 【System】自動計算：20%(Auth) -> 100%(全項目完了)
  profile_last_updated   DateTime?                              // 【System】プロフィール更新時の自動記録
  
  // ==========================================
  // 使用状況追跡（System自動収集）
  // ==========================================
  lastLoginAt          DateTime? @map("last_login_at")          // 【System】ログイン時自動更新
  loginCount           Int      @default(0) @map("login_count") // 【System】ログイン時自動インクリメント
  
  // ==========================================
  // Stripe課金情報（System自動管理）
  // ==========================================
  stripeCustomerId     String?   @unique @map("stripe_customer_id")     // 【System】Stripe連携時自動設定
  stripeSubscriptionId String?   @unique @map("stripe_subscription_id") // 【System】サブスク開始時自動設定
  currentPlan          Plan      @default(FREE) @map("current_plan")    // 【System】プラン変更時自動更新
  subscriptionStatus   SubscriptionStatus? @map("subscription_status") // 【System】Stripe Webhook自動更新
  billingCycle         BillingCycle? @map("billing_cycle")              // 【System】プラン選択時設定
  subscriptionEndsAt   DateTime? @map("subscription_ends_at")           // 【System】サブスク管理自動計算
  trialEndsAt          DateTime? @map("trial_ends_at")                  // 【System】トライアル開始時自動設定

  // リレーション
  accounts         Account[]
  sessions         Session[]
  languageSkills   LanguageSkill[]
  socialAccounts   SocialAccount[]
  billingHistory   BillingHistory[]
  planChangeHistory PlanChangeHistory[]
  experimentTracking ExperimentTracking[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

// ==========================================
// カスタムユーザーデータテーブル
// ==========================================

// 言語スキル（5段階評価）
model LanguageSkill {
  id                String @id @default(cuid())
  userId            String @map("user_id")
  language          String // 'japanese', 'english', 'chinese', etc.
  skillType         String // 'speaking', 'listening', 'reading', 'writing'
  level             Int    // 1-5のレベル
  selfAssessment    String? // 自己評価コメント
  lastAssessedAt    DateTime @default(now()) @map("last_assessed_at")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, language, skillType])
  @@map("language_skills")
}

// ソーシャルアカウント連携情報
model SocialAccount {
  id                String @id @default(cuid())
  userId            String @map("user_id")
  provider          Provider
  providerId        String @map("provider_id")
  providerUsername  String? @map("provider_username")
  profileUrl        String? @map("profile_url")
  connectedAt       DateTime @default(now()) @map("connected_at")
  lastSyncedAt      DateTime? @map("last_synced_at")
  isActive          Boolean @default(true) @map("is_active")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, provider])
  @@unique([provider, providerId])
  @@map("social_accounts")
}

// ==========================================
// 課金・支払い関連テーブル
// ==========================================

// 課金履歴（分析・サポート用）
model BillingHistory {
  id                        String @id @default(cuid())
  userId                    String @map("user_id")
  stripePaymentIntentId     String? @map("stripe_payment_intent_id")
  stripeInvoiceId           String? @map("stripe_invoice_id")
  amount                    Int    // セント単位
  currency                  String @default("jpy")
  plan                      Plan
  billingCycle              BillingCycle?
  paymentStatus             PaymentStatus
  paymentMethod             String? // 'card', 'bank_transfer', etc.
  failureReason             String? @map("failure_reason")
  paidAt                    DateTime? @map("paid_at")
  createdAt                 DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("billing_history")
}

// プラン変更履歴（マーケティング分析用）
model PlanChangeHistory {
  id                    String @id @default(cuid())
  userId                String @map("user_id")
  fromPlan              Plan? @map("from_plan") // 初回登録時はnull
  toPlan                Plan @map("to_plan")
  changeReason          ChangeReason @map("change_reason")
  changeTrigger         ChangeTrigger @map("change_trigger")
  effectiveDate         DateTime @map("effective_date")
  createdAt             DateTime @default(now()) @map("created_at")

  // マーケティング分析用
  campaignSource        String? @map("campaign_source") // UTMパラメータ
  discountApplied       String? @map("discount_applied") // 適用されたクーポン
  customerLifetimeValue Decimal? @map("customer_lifetime_value") // CLV計算用

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("plan_change_history")
}

// A/Bテスト・実験追跡
model ExperimentTracking {
  id                String @id @default(cuid())
  userId            String @map("user_id")
  experimentName    String @map("experiment_name") // 'pricing_page_v2', 'onboarding_flow_a'
  variant           String // 'control', 'treatment_a', 'treatment_b'
  assignedAt        DateTime @default(now()) @map("assigned_at")
  convertedAt       DateTime? @map("converted_at")
  conversionValue   Decimal? @map("conversion_value") // 収益への影響
  metadata          Json? // 実験固有のデータ

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, experimentName])
  @@map("experiment_tracking")
}

// ==========================================
// Enum定義
// ==========================================

enum Gender {
  MALE
  FEMALE
  NON_BINARY
  PREFER_NOT_TO_SAY
}

enum Provider {
  GOOGLE
  LINE
  INSTAGRAM
}

enum Plan {
  FREE
  BASIC
  PREMIUM
  ENTERPRISE
}

enum SubscriptionStatus {
  ACTIVE
  PAST_DUE
  CANCELED
  UNPAID
  INCOMPLETE
  INCOMPLETE_EXPIRED
  TRIALING
}

enum BillingCycle {
  MONTHLY
  YEARLY
}

enum PaymentStatus {
  PENDING
  SUCCEEDED
  FAILED
  CANCELED
  REFUNDED
}

enum ChangeReason {
  UPGRADE
  DOWNGRADE
  CANCELED
  REACTIVATED
  TRIAL_ENDED
}

enum ChangeTrigger {
  USER_INITIATED
  AUTOMATIC
  ADMIN_ACTION
  EXPERIMENT
  PROMOTION
}
